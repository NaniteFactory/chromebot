package domain

// Code generated by chromebot-domain-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/audits"
	"github.com/chromedp/cdproto/network"
)

// Audits executes a cdproto command under Audits domain.
type Audits struct {
	ctxWithExecutor context.Context
}

// GetEncodedResponse returns the response body and size if it were
// re-encoded with the specified settings. Only applies to images.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/Audits#method-getEncodedResponse
//
// parameters:
//  - `requestID`: Identifier of the network request to get content for.
//  - `encoding`: The encoding to use.
//  - `quality`: This can be nil. (Optional) The quality of the encoding (0-1). (defaults to 1)
//  - `sizeOnly`: This can be nil. (Optional) Whether to only return the size information (defaults to false).
//
// returns:
//  - `retBody`: The encoded body as a base64 string. Omitted if sizeOnly is true.
//  - `retOriginalSize`: Size before re-encoding.
//  - `retEncodedSize`: Size after re-encoding.
func (doAudits Audits) GetEncodedResponse(requestID network.RequestID, encoding audits.GetEncodedResponseEncoding, quality *float64, sizeOnly *bool) (retBody []byte, retOriginalSize int64, retEncodedSize int64, err error) {
	b := audits.GetEncodedResponse(requestID, encoding)
	if quality != nil {
		b = b.WithQuality(*quality)
	}
	if sizeOnly != nil {
		b = b.WithSizeOnly(*sizeOnly)
	}
	return b.Do(doAudits.ctxWithExecutor)
}
