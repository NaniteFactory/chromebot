package domain

// Code generated by chromebot-domain-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/serviceworker"
)

// ServiceWorker executes a cdproto command under ServiceWorker domain.
type ServiceWorker struct {
	ctxWithExecutor context.Context
}

// DeliverPushMessage [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-deliverPushMessage
//
// parameters:
//  - `origin`
//  - `registrationID`
//  - `data`
func (doServiceWorker ServiceWorker) DeliverPushMessage(origin string, registrationID serviceworker.RegistrationID, data string) (err error) {
	b := serviceworker.DeliverPushMessage(origin, registrationID, data)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// Disable [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-disable
func (doServiceWorker ServiceWorker) Disable() (err error) {
	b := serviceworker.Disable()
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// DispatchSyncEvent [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-dispatchSyncEvent
//
// parameters:
//  - `origin`
//  - `registrationID`
//  - `tag`
//  - `lastChance`
func (doServiceWorker ServiceWorker) DispatchSyncEvent(origin string, registrationID serviceworker.RegistrationID, tag string, lastChance bool) (err error) {
	b := serviceworker.DispatchSyncEvent(origin, registrationID, tag, lastChance)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// DispatchPeriodicSyncEvent [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-dispatchPeriodicSyncEvent
//
// parameters:
//  - `origin`
//  - `registrationID`
//  - `tag`
func (doServiceWorker ServiceWorker) DispatchPeriodicSyncEvent(origin string, registrationID serviceworker.RegistrationID, tag string) (err error) {
	b := serviceworker.DispatchPeriodicSyncEvent(origin, registrationID, tag)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// Enable [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-enable
func (doServiceWorker ServiceWorker) Enable() (err error) {
	b := serviceworker.Enable()
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// InspectWorker [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-inspectWorker
//
// parameters:
//  - `versionID`
func (doServiceWorker ServiceWorker) InspectWorker(versionID string) (err error) {
	b := serviceworker.InspectWorker(versionID)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// SetForceUpdateOnPageLoad [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-setForceUpdateOnPageLoad
//
// parameters:
//  - `forceUpdateOnPageLoad`
func (doServiceWorker ServiceWorker) SetForceUpdateOnPageLoad(forceUpdateOnPageLoad bool) (err error) {
	b := serviceworker.SetForceUpdateOnPageLoad(forceUpdateOnPageLoad)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// SkipWaiting [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-skipWaiting
//
// parameters:
//  - `scopeURL`
func (doServiceWorker ServiceWorker) SkipWaiting(scopeURL string) (err error) {
	b := serviceworker.SkipWaiting(scopeURL)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// StartWorker [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-startWorker
//
// parameters:
//  - `scopeURL`
func (doServiceWorker ServiceWorker) StartWorker(scopeURL string) (err error) {
	b := serviceworker.StartWorker(scopeURL)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// StopAllWorkers [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-stopAllWorkers
func (doServiceWorker ServiceWorker) StopAllWorkers() (err error) {
	b := serviceworker.StopAllWorkers()
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// StopWorker [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-stopWorker
//
// parameters:
//  - `versionID`
func (doServiceWorker ServiceWorker) StopWorker(versionID string) (err error) {
	b := serviceworker.StopWorker(versionID)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// Unregister [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-unregister
//
// parameters:
//  - `scopeURL`
func (doServiceWorker ServiceWorker) Unregister(scopeURL string) (err error) {
	b := serviceworker.Unregister(scopeURL)
	return b.Do(doServiceWorker.ctxWithExecutor)
}

// UpdateRegistration [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/ServiceWorker#method-updateRegistration
//
// parameters:
//  - `scopeURL`
func (doServiceWorker ServiceWorker) UpdateRegistration(scopeURL string) (err error) {
	b := serviceworker.UpdateRegistration(scopeURL)
	return b.Do(doServiceWorker.ctxWithExecutor)
}
