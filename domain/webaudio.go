package domain

// Code generated by chromebot-domain-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/webaudio"
)

// WebAudio executes a cdproto command under WebAudio domain.
type WebAudio struct {
	ctxWithExecutor context.Context
}

// Enable enables the WebAudio domain and starts sending context lifetime
// events.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/WebAudio#method-enable
func (doWebAudio WebAudio) Enable() (err error) {
	b := webaudio.Enable()
	return b.Do(doWebAudio.ctxWithExecutor)
}

// Disable disables the WebAudio domain.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/WebAudio#method-disable
func (doWebAudio WebAudio) Disable() (err error) {
	b := webaudio.Disable()
	return b.Do(doWebAudio.ctxWithExecutor)
}

// GetRealtimeData fetch the realtime data from the registered contexts.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/WebAudio#method-getRealtimeData
//
// parameters:
//  - `contextID`
//
// returns:
//  - `retRealtimeData`
func (doWebAudio WebAudio) GetRealtimeData(contextID webaudio.GraphObjectID) (retRealtimeData *webaudio.ContextRealtimeData, err error) {
	b := webaudio.GetRealtimeData(contextID)
	return b.Do(doWebAudio.ctxWithExecutor)
}
