package domain

// Code generated by chromebot-domain-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/domstorage"
)

// DOMStorage executes a cdproto command under DOMStorage domain.
type DOMStorage struct {
	ctxWithExecutor context.Context
}

// Clear [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-clear
//
// parameters:
//  - `storageID`
func (doDOMStorage DOMStorage) Clear(storageID *domstorage.StorageID) (err error) {
	b := domstorage.Clear(storageID)
	return b.Do(doDOMStorage.ctxWithExecutor)
}

// Disable disables storage tracking, prevents storage events from being sent
// to the client.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-disable
func (doDOMStorage DOMStorage) Disable() (err error) {
	b := domstorage.Disable()
	return b.Do(doDOMStorage.ctxWithExecutor)
}

// Enable enables storage tracking, storage events will now be delivered to
// the client.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-enable
func (doDOMStorage DOMStorage) Enable() (err error) {
	b := domstorage.Enable()
	return b.Do(doDOMStorage.ctxWithExecutor)
}

// GetDOMStorageItems [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-getDOMStorageItems
//
// parameters:
//  - `storageID`
//
// returns:
//  - `retEntries`
func (doDOMStorage DOMStorage) GetDOMStorageItems(storageID *domstorage.StorageID) (retEntries []domstorage.Item, err error) {
	b := domstorage.GetDOMStorageItems(storageID)
	return b.Do(doDOMStorage.ctxWithExecutor)
}

// RemoveDOMStorageItem [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-removeDOMStorageItem
//
// parameters:
//  - `storageID`
//  - `key`
func (doDOMStorage DOMStorage) RemoveDOMStorageItem(storageID *domstorage.StorageID, key string) (err error) {
	b := domstorage.RemoveDOMStorageItem(storageID, key)
	return b.Do(doDOMStorage.ctxWithExecutor)
}

// SetDOMStorageItem [no description].
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMStorage#method-setDOMStorageItem
//
// parameters:
//  - `storageID`
//  - `key`
//  - `value`
func (doDOMStorage DOMStorage) SetDOMStorageItem(storageID *domstorage.StorageID, key string, value string) (err error) {
	b := domstorage.SetDOMStorageItem(storageID, key, value)
	return b.Do(doDOMStorage.ctxWithExecutor)
}
