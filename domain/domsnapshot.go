package domain

// Code generated by chromebot-domain-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/domsnapshot"
)

// DOMSnapshot executes a cdproto command under DOMSnapshot domain.
type DOMSnapshot struct {
	ctxWithExecutor context.Context
}

// Disable disables DOM snapshot agent for the given page.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMSnapshot#method-disable
func (doDOMSnapshot DOMSnapshot) Disable() (err error) {
	b := domsnapshot.Disable()
	return b.Do(doDOMSnapshot.ctxWithExecutor)
}

// Enable enables DOM snapshot agent for the given page.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMSnapshot#method-enable
func (doDOMSnapshot DOMSnapshot) Enable() (err error) {
	b := domsnapshot.Enable()
	return b.Do(doDOMSnapshot.ctxWithExecutor)
}

// CaptureSnapshot returns a document snapshot, including the full DOM tree
// of the root node (including iframes, template contents, and imported
// documents) in a flattened array, as well as layout and white-listed computed
// style information for the nodes. Shadow DOM in the returned DOM tree is
// flattened.
//
// See: https://chromedevtools.github.io/devtools-protocol/tot/DOMSnapshot#method-captureSnapshot
//
// parameters:
//  - `computedStyles`: Whitelist of computed styles to return.
//  - `includePaintOrder`: This can be nil. (Optional) Whether to include layout object paint orders into the snapshot.
//  - `includeDOMRects`: This can be nil. (Optional) Whether to include DOM rectangles (offsetRects, clientRects, scrollRects) into the snapshot
//
// returns:
//  - `retDocuments`: The nodes in the DOM tree. The DOMNode at index 0 corresponds to the root document.
//  - `retStrings`: Shared string table that all string properties refer to with indexes.
func (doDOMSnapshot DOMSnapshot) CaptureSnapshot(computedStyles []string, includePaintOrder *bool, includeDOMRects *bool) (retDocuments []*domsnapshot.DocumentSnapshot, retStrings []string, err error) {
	b := domsnapshot.CaptureSnapshot(computedStyles)
	if includePaintOrder != nil {
		b = b.WithIncludePaintOrder(*includePaintOrder)
	}
	if includeDOMRects != nil {
		b = b.WithIncludeDOMRects(*includeDOMRects)
	}
	return b.Do(doDOMSnapshot.ctxWithExecutor)
}
